/**
 * 숙원 웹사이트 - 문의 폼 데이터 처리를 위한 Google Apps Script
 * 
 * 사용 방법:
 * 1. Google 스프레드시트에서 [확장 프로그램 > Apps Script] 메뉴를 선택하여 스크립트 편집기를 엽니다.
 * 2. 아래 코드를 붙여넣고 저장합니다.
 * 3. [배포 > 새 배포] 메뉴를 선택합니다.
 * 4. 유형으로 '웹 앱'을 선택합니다.
 * 5. '웹 앱으로 액세스할 수 있는 사용자'를 '모든 사용자'로 설정합니다.
 * 6. '배포'를 클릭하고 생성된 URL을 복사합니다.
 * 7. script.js 파일의 scriptURL 변수에 이 URL을 입력합니다.
 */

// 스프레드시트 ID를 여기에 입력하세요 (URL에서 /d/ 다음, /edit 이전 부분)
const SPREADSHEET_ID = '1-XdLdhhcnL-4c0glaT-UyoCSGy-lS3tcMzbxD2m-J34';
const SHEET_NAME = 'Sheet1'; // 데이터를 저장할 시트 이름

// GET 또는 POST 요청을 처리하는 공통 함수
function processRequest(e) {
  try {
    // 요청 파라미터 가져오기 (GET 또는 POST 모두 처리)
    const params = e.parameter || {};
    
    // 폼 데이터 파싱
    const data = {
      timestamp: params.timestamp || new Date().toISOString(),
      name: params.name || '',
      email: params.email || '',
      phone: params.phone || '',
      inquiryType: params.inquiryType || '',
      message: params.message || ''
    };
    
    // 스프레드시트와 시트 열기
    const ss = SpreadsheetApp.openById(SPREADSHEET_ID);
    let sheet = ss.getSheetByName(SHEET_NAME);
    
    // 시트가 없으면 새로 생성
    if (!sheet) {
      sheet = ss.insertSheet(SHEET_NAME);
      
      // 헤더 행 추가
      sheet.appendRow([
        '타임스탬프', 
        '이름', 
        '이메일', 
        '연락처', 
        '문의 유형', 
        '문의 내용'
      ]);
      
      // 헤더 행 서식 설정
      sheet.getRange(1, 1, 1, 6).setFontWeight('bold').setBackground('#f3e9d2');
      sheet.setFrozenRows(1);
    }
    
    // 데이터 행 추가
    sheet.appendRow([
      new Date(data.timestamp), // 타임스탬프를 날짜 형식으로 변환
      data.name,
      data.email,
      data.phone,
      data.inquiryType,
      data.message
    ]);
    
    // 모든 열 자동 크기 조정
    sheet.autoResizeColumns(1, 6);
    
    // 성공 응답 반환
    return ContentService.createTextOutput('성공적으로 제출되었습니다')
      .setMimeType(ContentService.MimeType.TEXT);
    
  } catch (error) {
    // 오류 발생 시 에러 메시지
    return ContentService.createTextOutput('오류: ' + error.toString())
      .setMimeType(ContentService.MimeType.TEXT);
  }
}

// 웹 앱으로 POST 요청을 처리하는 함수
function doPost(e) {
  return processRequest(e);
}

// 웹 앱으로 GET 요청을 처리하는 함수
function doGet(e) {
  // 파라미터가 있으면 폼 데이터로 처리
  if (e.parameter && Object.keys(e.parameter).length > 0) {
    return processRequest(e);
  }
  
  // 그냥 페이지 방문이면 안내 메시지 표시
  return ContentService.createTextOutput('숙원 웹사이트 문의 폼 API - 폼 제출을 통해 데이터를 전송해주세요.')
    .setMimeType(ContentService.MimeType.TEXT);
} 